package practice;

import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class MarkovChain {

	public static ArrayList<String> stringToArrayList(String text) {
		ArrayList<String> wordList = new ArrayList<>();
		int i = 0;
		String wordTemp = "";
		if (text.charAt(0) != ' ') {
			while (text.charAt(i) != ' ') {
				wordTemp = wordTemp + "" + text.charAt(i);
				i++;
			}
			wordList.add(wordTemp);
		}
		i = i - 1;
		wordTemp = "";

		for (i = i; i < text.length(); i++) {
			if (text.charAt(i) == ' ') {
				i++;
				while (text.charAt(i) != ' ') {
					wordTemp = wordTemp + "" + text.charAt(i);
					i++;
					if (i >= text.length()) {
						break;
					}
				}
				i = i - 1;
				wordList.add(wordTemp);
				wordTemp = "";
			}
		}

		return wordList;
	}

	public static String[][] wordPairArray(ArrayList<String> words) {
		String[][] wordPairs = new String[words.size()][2];
		int j = 0; // to alternate betw. 1 and 0 for the inner arrays
		int k = 0; // to alternate
		double h = 0; // h is for outer array

		for (double i = .5; i < words.size(); i = i + .5) { // i index of words
			h = i - .5;
			// to alternate
			if (k % 2 == 0) {
				j = 0;
			} else {
				j = 1;
			}

			wordPairs[(int) (h)][j] = words.get((int) (i));

			k++; // to alternate
		}

		return wordPairs;
	}

	public static String mostPopularNextWord(String word, String[][] wordPairs) {
		ArrayList<String> secondWordList = new ArrayList<String>();
		for (int i = 0; i < wordPairs.length - 1; i++) {
			String firstWordTemp = wordPairs[i][0];
			if (firstWordTemp.equals(word)) {
				secondWordList.add(wordPairs[i][1]);
			}
		}
		String secondWordTemp = "";
		String mostRepeatedWord = "";
		int tempWordHits = 0;
		int mostRepeatedWordHits = 0;
		for (int i = 0; i < secondWordList.size(); i++) {
			secondWordTemp = secondWordList.get(i);
			for (int j = i; j < secondWordList.size(); j++) {
				if (secondWordList.get(j).equals(secondWordTemp)) {
					tempWordHits = tempWordHits + 1;
				}
			}
			if (tempWordHits > mostRepeatedWordHits) {
				mostRepeatedWord = secondWordTemp;
				mostRepeatedWordHits = tempWordHits;
				tempWordHits = 0;
			}
		}
		return mostRepeatedWord;
	}

	public static HashMap<String, String> createHashMap(String[][] wordPairs) {
		HashMap<String, String> wordPairIndex = new HashMap<String, String>();
		for (int i = 0; i < wordPairs.length - 1; i++) {
			String firstWordTemp = wordPairs[i][0];
			wordPairIndex.put(firstWordTemp,
					mostPopularNextWord(firstWordTemp, wordPairs));
		}

		return wordPairIndex;
	}

	public static void print(String text) {
		ArrayList<String> wordList = stringToArrayList(text);
		HashMap<String, String> wordPairIndex = createHashMap(wordPairArray(wordList));
		Scanner keyboard = new Scanner(System.in);
		System.out.println("How many words long do you want this text to be? ");
		int length = keyboard.nextInt();
		System.out.print("Enter one word: ");
		String typedWord = keyboard.next();
		String nextWord = wordPairIndex.get(typedWord);
		if (nextWord == null) {
			nextWord = wordList.get((int) Math.floor(Math.random()
					* wordList.size()));
		}
		String newText = typedWord + " " + nextWord + " ";
		for (int i = 0; i <= length; i++) {
			nextWord = wordPairIndex.get(nextWord);
			if (nextWord == null) {
				nextWord = wordList.get((int) Math.floor(Math.random()
						* wordList.size()));
			}
			newText = newText + " " + nextWord + " ";
		}
		System.out.println(newText);
	}

	public static void main(String[] args) {

		String testString = "Your Honor, Mr. Foreman, ladies and gentlemen of the jury, my name is "
				+ "Arthur Kirkland, and I am the defense counsel for the defendant, Judge Henry T. Fleming. Now, "
				+ "that man over there, he's the prosecuting attorney, and he couldn't be happier today. He is a "
				+ "happy man today, because today he's goin' after a judge, and if he gets him, if he gets him, he's"
				+ " gonna be a star. He's gonna have his name in this month'sLaw Review - Centerfold, Lawyer of the Month."
				+ " Now, in order to win this case, he needs you, naturally. You're all he's got, believe me. So he's counting on"
				+ " tapping that emotion in you which says, 'Let's get somebody in power. Let's get a judge.' However, these proceedings"
				+ " are not about that. These proceedings are here to see that justice is done. And justice is, as any reasonable person "
				+ "will tell ya, the finding of the truth. And what is the truth today? One truth, a tragic one, is that that girl has"
				+ " been beaten and raped. Another truth is that the prosecution doesn't have a witness, does not have one piece of"
				+ " substantiating evidence other than the testimony of the victim herself. Another truth is that my client,"
				+ " voluntarily, and the prosecution is well aware of this fact, voluntarily took a lie detector test...and"
				+ " told the truth Sorry, Your Honor. Let's get back to justice. What is justice? What is the intention of "
				+ "justice? The intention of justice is to see that the guilty people are proven guilty and that the innocent "
				+ "are freed. Simple, isn't it? Only it's not that simple. However, it is the defense counsel's duty to protect"
				+ " the rights of the individual, as it is the prosecution's duty to uphold and defend the laws of the State."
				+ " Justice for all. Only we have a problem here. And you know what it is? Both sides wanna win. We wanna win."
				+ " We wanna win regardless of the truth. And we wanna win regardless of justice, regardless of who's guilty or"
				+ " innocent. Winning is everything! That man there wants a win so badly today, it means so much to him, he is "
				+ "so carried away with the prospect of winning, the idea, that he forgot something that's absolutely essential"
				+ " to today's proceedings. He forgot his case. He forgot to bring it. I don't know, I don't see it, do you? The"
				+ " prosecution's case. He's gotta have one. Not a witness, not one piece of substantiating evidence other than"
				+ " the testimony of the victim herself. Ladies and gentlemen of the jury, I have a case to end all cases. I have"
				+ " witnesses for my client, I have character references, testimonials that are backed up from here to Washington,"
				+ " DC! I got lie detector tests that are The one thing that bothered me, the one thing that stayed in my mind and"
				+ " I couldn't get rid of it, that haunted me, was 'why?' Why would she lie? What was her motive for lyin'? If my "
				+ "client is innocent, she's lying. Why? Was it blackmail? No. Was it jealousy? No. Yesterday, I found out why. She"
				+ " doesn't have a motive. You know why? Because she's not lying. And ladies and gentlemen of the jury, the"
				+ " prosecution is not gonna get that man today. No! Because I'm gonna get him! My client, the Honorable Henry "
				+ "T. Fleming, should go right to f--kin' jail! The son of a bitch is guilty That man is guilty! That man there,"
				+ " that man is a slime! He is a slime! If he's allowed to go free, then something really wrong is goin' on here! "
				+ "You're out of order! You're out of order! The whole trial is out of order! They're out of order! That man, that "
				+ "sick, crazy depraved man raped and beat that woman there, and he'd like to do it again! He told me so!"
				+ " It's just a show! It's a show! It's 'Let's Make a Deal!' Let's make a deal! (As he was dragged from the"
				+ " courtroom) Hey, Frank, you want to make a deal? I got an insane judge who likes to beat the s--t out of"
				+ " women! What do you want to give me, Frank? Three weeks probation? You, you son of a bitch, you! You're"
				+ " supposed to stand for somethin'! You're supposed to protect people! But instead you f--kin' murder them!"
				+ " You killed McCullaugh!! You killed him! Hold it! Hold it! I just completed my opening statement!";
		
		print(testString);
	}

}
